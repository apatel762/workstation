name: CI

#
# The various ${{ github.xxx }} variables are described here:
# https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
#

on:
  push:
    branches:
      - master
  pull_request: {}
  schedule:
    - cron: '5 15 * * *' # 3pm-ish UTC everyday (timed against official Fedora container pushes)

jobs:
  ci:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    # ------------------------
    # - BEGIN PIPELINE STEPS -
    # ------------------------

    steps:

    - name: Check out the repo
      uses: actions/checkout@v4

    # -----------------------------------------------------------------
    # Verify that the image successfully builds.

    - name: Build image
      id: build_image
      uses: redhat-actions/buildah-build@v2
      with:
        containerfiles: |
          ./Containerfile
        image: "ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}"

    - name: Output of image build
      if: github.event_name != 'pull_request'
      run: |
        echo "${{ toJSON(steps.build_image.outputs) }}"

    # -----------------------------------------------------------------
    # Publish the image. ('master' only)
 
    - name: Log in to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push to GitHub Container Registry
      uses: Wandalen/wretry.action@v3.0.0
      id: push_to_registry
      if: github.event_name != 'pull_request'
      env:
        REGISTRY_USER: ${{ github.actor }}
        REGISTRY_PASSWORD: ${{ github.token }}
      with:
        action: redhat-actions/push-to-registry@v2
        attempt_limit: 3
        attempt_delay: 15000
        with: |
          tags: ${{ steps.build_image.outputs.image-with-tag }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: Output of image publish
      if: github.event_name != 'pull_request'
      run: |
        echo "${{ toJSON(steps.push_to_registry.outputs) }}"

    # -----------------------------------------------------------------
    # Sign the image. ('master' only)

    - name: Set up cosign
      uses: sigstore/cosign-installer@v3.5.0
      if: github.event_name != 'pull_request'

    - name: Sign container image
      if: github.event_name != 'pull_request'
      run: |
        cosign sign -y --key env://KEY ${{ steps.build_image.outputs.image }}@${TAGS}
      env:
        TAGS: ${{ steps.push_to_registry.outputs.outputs && fromJSON(steps.push_to_registry.outputs.outputs).digest }}
        KEY: "${{ secrets.COSIGN_PRIVATE_KEY }}"
        COSIGN_PASSWORD: "${{ secrets.COSIGN_PRIVATE_KEY_PASSWORD }}"

    # ----------------------
    # - END PIPELINE STEPS -
    # ----------------------
